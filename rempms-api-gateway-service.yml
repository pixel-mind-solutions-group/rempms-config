server:
  port: 8081

spring:
  main:
    web-application-type: reactive
  cloud:
    gateway:
      httpclient:
        connect-timeout: 10000 # 10 seconds
        response-timeout: 60000 # 60 seconds
      discovery:
        locator:
          enabled: false
          lower-case-service-id: true
    openfeign:
      okhttp:
        enabled: true

eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8070/eureka/
  instance:
    prefer-ip-address: true

rabbitmq:
  host: localhost
  port: 5672
  username: guest
  password: guest

management:
  endpoints:
    web:
      exposure:
        include: "*"
  health:
    liveness-state:
      enabled: true
    readiness-state:
      enabled: true
  endpoint:
    health:
      probes:
        enabled: true
  metrics:
    tags:
      enabled: true
      application: ${spring.application.name}

logging:
  level:
    org:
      springframework:
        cloud: DEBUG
  pattern:
    level: "%5p [${spring.application.name},%X{trace_id},%X{span_id}]"

# Circuit breaker pattern configuration
resilience4j.circuitbreaker:
  configs:
    default:
      slidingWindowSize: 10
      waitDurationInOpenState: 10s
      permittedNumberOfCallsInHalfOpenState: 2
      failureRateThreshold: 50
      slowCallRateThreshold: 50
      slowCallDurationThreshold: 10s
      maxWaitDurationInHalfOpenState: 0s

# Time limiter pattern configuration
resilience4j.timelimiter:
  configs:
    default:
      timeoutDuration: 20s

# Retry pattern configuration
resilience4j.retry:
  configs:
    default:
      max-attempts: 3                # Total number of attempts (initial + 2 retries)
      wait-duration: 5s              # Wait time between retries
      exponential-backoff:
        enabled: true
        multiplier: 2               # Doubles wait duration on each retry
        max-wait-duration: 10s      # Caps wait duration between retries